# CI for Flagd UI

name: flagd-ui-ci

on:
  workflow_dispatch:  # ✅ Manual trigger (via GitHub UI)

  push:
    branches:
      - main
    paths:
      - 'src/flagd-ui/**'

  pull_request:
    branches:
      - main
    paths:
      - 'src/flagd-ui/**'  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📦 Install dependencies
        working-directory: src/flagd-ui
        run: npm ci

      - name: 🏗️ Build Next.js app
        working-directory: src/flagd-ui
        run: npm run build

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📦 Install dependencies
        working-directory: src/flagd-ui
        run: npm ci

      - name: 🧹 Run ESLint
        working-directory: src/flagd-ui
        run: npm run lint

      - name: ✅ Run TypeScript type check
        working-directory: src/flagd-ui
        run: npx tsc --noEmit

      - name: 🔍 Trivy Dependency Vulnerability Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scanners: vuln
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          output: trivy-report.json
          format: json

      - name: 💾 Upload Trivy scan report
        uses: actions/upload-artifact@v4
        with:
            name: trivy-dependency-report
            path: trivy-report.json    

      - name: 💾 Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/flagd-ui/coverage
        

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 🛠️ Build Docker image (no push yet)
        uses: docker/build-push-action@v5
        with:
          context: src/flagd-ui
          file: src/flagd-ui/Dockerfile
          push: false
          load: true # <-- load image locally for scanning
          tags: ${{ secrets.DOCKER_USERNAME }}/flagd-ui:${{ github.run_id }}


      - name: 🚀 Push Docker image (only if scan passed)
        uses: docker/build-push-action@v5
        with:
          context: src/flagd-ui
          file: src/flagd-ui/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flagd-ui:${{ github.run_id }}


  # updatek8s:
  #           runs-on: ubuntu-latest
    
  #           needs: docker
    
  #           steps:
  #           - name: checkout code
  #             uses: actions/checkout@v4
  #             with:
  #               token: ${{ secrets.GITHUB_TOKEN }}
    
  #           - name: Update tag in kubernetes deployment manifest
  #             run: | 
  #                  sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{github.run_id}}|" kubernetes/flagd/deploy.yaml
            
  #           - name: Commit and push changes
  #             run: |
  #               git config --global user.email "lokashakthi19.ls@gmail.com"
  #               git config --global user.name "loka07"
  #               git add kubernetes/flagd/deploy.yaml
  #               git commit -m "[CI]: Update product catalog image tag"
  #               git push origin HEAD:main -f        